# This workflow will create a new release when it is called

name: Create release

on: 
  workflow_dispatch:
      
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17

    - name: Configure git for the maven release plugin
      run: |
        git config --global committer.email "noreply@github.com"
        git config --global committer.name "GitHub"
        git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git config --global author.name "${GITHUB_ACTOR}"

    - name: Find out version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
         PROJECT_VERSION=`mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive  exec:exec`
         CLEAN_PROJECT_VERSION=`echo "${PROJECT_VERSION%-SNAPSHOT}"`
         echo "RELEASE_VERSION=${CLEAN_PROJECT_VERSION}" >> $GITHUB_ENV
         echo "Generando release de la versi√≥n ${RELEASE_VERSION}"
      
    - name: Prepare & perform release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mvn --batch-mode release:prepare -Pdeployment -Dusername=$GITHUB_ACTOR -Dpassword=$GITHUB_TOKEN
        mvn --batch-mode release:perform -Pdeployment
      
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: Release_Tag_v.${{ env.RELEASE_VERSION }}
        name: Release ${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false
        generate_release_notes: true
        token: "${{ secrets.GITHUB_TOKEN }}"
        files: |
          ./target/epl_librarian-${{ env.RELEASE_VERSION }}.zip    
