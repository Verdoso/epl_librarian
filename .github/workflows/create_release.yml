# This workflow will create a new release when it is called

name: Create release

on: 
  workflow_dispatch:
      
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Configure git for the maven release plugin
      run: |
        git config --global committer.email "noreply@github.com"
        git config --global committer.name "GitHub"
        git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git config --global author.name "${GITHUB_ACTOR}"

    - name: Prepare release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        #mvn --batch-mode release:prepare -Dusername=$GITHUB_ACTOR -Dpassword=$GITHUB_TOKEN
        PROJECT_VERSION=`mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive  exec:exec`
        echo Sabemos aquie la version?: $PROJECT_VERSION
        echo '::set-env name=RELEASE_VERSION::${PROJECT_VERSION}'
    - name: Perform release
      run: |
         #mvn --batch-mode release:perform
         echo Aqu√≠ crearemos una nueva release con el fichero, version $RELEASE_VERSION, que se ha generado en la release

    
